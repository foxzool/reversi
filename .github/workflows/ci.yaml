name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  fmt:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          components: rustfmt
      - name: Check formatting
        run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: clippy
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libasound2-dev libudev-dev
      - name: Setup cache
        uses: Swatinem/rust-cache@v2
      - name: Run Clippy
        run: cargo clippy --workspace --all-targets --all-features -- -D warnings

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libasound2-dev libudev-dev
      - name: Setup cache
        uses: Swatinem/rust-cache@v2
      - name: Run tests
        run: cargo test --workspace

  check-web:
    name: Check Web Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          targets: wasm32-unknown-unknown
      - name: Setup cache
        uses: Swatinem/rust-cache@v2
      - name: Check web build
        run: cargo check --target wasm32-unknown-unknown --release

  build-web:
    name: Build Web
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          targets: wasm32-unknown-unknown
      - name: Install wasm-bindgen-cli
        run: cargo install wasm-bindgen-cli
      - name: Setup cache
        uses: Swatinem/rust-cache@v2
      - name: Build for web
        run: |
          cargo build --release --target wasm32-unknown-unknown
          wasm-bindgen --out-dir web-dist --web target/wasm32-unknown-unknown/release/reversi.wasm
      - name: Copy assets
        run: |
          mkdir -p web-dist/assets
          if [ -d "assets" ]; then
            cp -r assets/* web-dist/assets/
          fi
      - name: Generate index.html
        run: |
          cat > web-dist/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="utf-8">
              <title>Reversi - Web Edition</title>
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <style>
                  body {
                      margin: 0;
                      padding: 0;
                      background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);
                      font-family: 'Arial', sans-serif;
                      display: flex;
                      flex-direction: column;
                      align-items: center;
                      justify-content: center;
                      min-height: 100vh;
                      color: white;
                  }
                  #loading {
                      text-align: center;
                      margin: 20px;
                  }
                  .spinner {
                      border: 4px solid #f3f3f3;
                      border-top: 4px solid #3498db;
                      border-radius: 50%;
                      width: 40px;
                      height: 40px;
                      animation: spin 2s linear infinite;
                      margin: 20px auto;
                  }
                  @keyframes spin {
                      0% { transform: rotate(0deg); }
                      100% { transform: rotate(360deg); }
                  }
                  canvas {
                      background: #f0f0f0;
                      border-radius: 8px;
                      box-shadow: 0 4px 15px rgba(0,0,0,0.3);
                      max-width: 100%;
                      height: auto;
                  }
                  .error {
                      color: #ff6b6b;
                      background: rgba(255,107,107,0.1);
                      padding: 15px;
                      border-radius: 8px;
                      border: 1px solid #ff6b6b;
                      margin: 20px;
                  }
              </style>
          </head>
          <body>
              <h1>ðŸ”´âš« Reversi - Web Edition</h1>
              
              <div id="loading">
                  <div class="spinner"></div>
                  <p>Loading game...</p>
              </div>

              <script type="module">
                  import init from './reversi.js';
                  
                  async function run() {
                      try {
                          await init();
                          document.getElementById('loading').style.display = 'none';
                          console.log('ðŸŽ® Reversi game loaded successfully!');
                      } catch (error) {
                          console.error('Failed to load game:', error);
                          document.getElementById('loading').innerHTML = `
                              <div class="error">
                                  <h3>Failed to load game</h3>
                                  <p>Error: ${error.message}</p>
                                  <p>Please try refreshing the page.</p>
                              </div>
                          `;
                      }
                  }
                  
                  run();
              </script>
          </body>
          </html>
          EOF
      - name: Upload web build artifact
        uses: actions/upload-artifact@v4
        with:
          name: reversi-web
          path: web-dist/